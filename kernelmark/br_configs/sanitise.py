# sanitise
#   Script to strip out garbage to prep a config file generated by buildroot for use by kernelmark
# Matt Rossouw (omeh-a)
# 01/23

import os
import sys

DUMB_FLAGS = ["BR2_PACKAGE_PLY=n",
              "BR2_PACKAGE_OFONO=n",
              "BR2_PACKAGE_KMSXX=n",
              "BR2_PACKAGE_LIBQRTR_GLIB=n",
              "BR2_PACKAGE_ELL=n",
              "BR2_PACKAGE_LIBURING=n",
              "BR2_PACKAGE_CFM=n",
              "BR2_PACKAGE_IWD=n",
              "BR2_PACKAGE_MRP=n",
              "BR2_PACKAGE_OLSR=n",
              "BR2_PACKAGE_WIREGUARD_LINUX_COMPAT=n",
              "BR2_PACKAGE_LIBMANETTE=n",
              "BR2_PACKAGE_MDIO_TOOLS=n"
              ]

def main():
    kernel_version = False
    kernel_custom_version = False
    
    if len(sys.argv) != 3:
        print("USAGE: sanitise [file] [machinename]")
    
    with open(sys.argv[1], 'r') as reader, open(f"{os.path.dirname(os.path.realpath(__file__))}/{sys.argv[2]}.config", 'w') as writer:
        for line in reader:
            if not kernel_version and "BR2_LINUX_KERNEL_VERSION" in line:
                kernel_version = True
                continue
            elif not kernel_custom_version and "BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE" in line:
                kernel_custom_version = True
                continue
            elif "BR2_PACKAGE_HOST_LINUX_HEADERS_CUSTOM_" in line:
                continue
            elif "BR2_TOOLCHAIN_HEADERS_AT_LEAST" in line:
                continue
            elif "BR2_TOOLCHAIN_HEADERS_LATEST=y" in line:
                continue
            elif "BR2_DEFAULT_KERNEL_VERSION" in line:
                continue
            elif "BR2_DEFAULT_KERNEL_HEADERS" in line:
                continue
            else:
                writer.write(line)
        for flag in DUMB_FLAGS:
            writer.write(f"{flag}\n")
    print(f"Sanitised file and saved to {sys.argv[2]}.config.")




if __name__ == "__main__":
    main()